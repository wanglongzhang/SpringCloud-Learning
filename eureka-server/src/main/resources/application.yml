spring:
    application:
        name: eureka-server

logging:
    level:
        root: WARN

        # Set INFO to see the allocated port
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
        org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO

---
spring:
    profiles: peer1 # not standalone
server:
    port: 10001
eureka:
    instance:
        hostname: eureka-peer1
    #server:
        #enable-self-preservation: false # 关闭保护机制
    client:
        registerWithEureka: false
        fetchRegistry: false
        serviceUrl:
            defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
logging:
    file: logs/${spring.application.name}-${spring.profiles}.log
---
spring:
    profiles: peer2 # not standalone
server:
    port: 10002
eureka:
    instance:
        hostname: eureka-peer2
    client:
        registerWithEureka: false
        fetchRegistry: false
        serviceUrl:
            defaultZone: http://eureka-peer1:10001/eureka/,http://eureka-peer3:10003/eureka/
logging:
    file: logs/${spring.application.name}-${spring.profiles}.log

---
spring:
    profiles: peer3 # not standalone
server:
    port: 10003
eureka:
    instance:
        hostname: eureka-peer3
    client:
        registerWithEureka: false
        fetchRegistry: false
        serviceUrl:
            defaultZone: http://eureka-peer1:10001/eureka/,http://eureka-peer2:10002/eureka/
logging:
    file: logs/${spring.application.name}-${spring.profiles}.log

